---
title: "Statistique descriptive bivariée"
format:
  html:
    theme: marimo
    code-fold: false
    include-before: |
      <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@marimo-team/frontend@0.11.14-dev6/dist/assets/index-BvR4Kvfh.css" crossorigin="anonymous">
    code-options:
      numbered: true
jupyter: python3
---

### - Importations de bibliothèques
```{python}
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.linear_model import LinearRegression 
```

```{python}
iris=pd.read_csv('iris.csv')
```

En appelant le nom du data frame, on peut voir à quoi ressemblent les données contenues dans le fichier.

```{python}
iris
```

### 1 - Quelles quantités sont mesurées ? Pour combien d'individus ? Combien y a-t-il de variétés d'iris dans ce jeu de données ? Afficher les 10 premières lignes puis les 10 dernières.

```{python}
iris.shape
```

Il y a 5 variables (colonnes) et 150 individus (lignes). 

```{python}
iris.columns
```

Il y a 4 valeurs quantitatives mesurées : longueur et largeur des pétales et des sépales (ce sont les noms des colonnes), pour 150 individus (nombre de lignes) plus une variable qualitative correspondant à la variété.

### Pour compter le nombre de variétés

```{python}
variete = iris.Class
```

```{python}
np.unique(variete)
```

On obtient les valeurs des 3 variétés : setosa, versicolor et virginica. On constate qu'il y a 50 individus de chaque.

Affichage des premières et dernières lignes
```{python}
iris.head(10)
```
```{python}
iris.tail(10)
```

### 2 - Extraire le vecteur des largeurs de sépales (Sepal_Width)

```{python}
sw1 = iris.Sepal_Width
sw1
```

ou bien
```{python}
sw2 = iris['Sepal_Width']
sw2
```

### 3 - Extraire le vecteur des largeurs de pétales (Petal_Width) pour la variété setosa

```{python}
iris.Petal_Width[iris.Class=='setosa']
```
## Mesures de tendance et de dispersion

### 1 utilisez la fonction describe pour obtenir le résumé quantitatif du jeu de données.

```{python}
iris.describe()
```

### 2 - Comparez les mesures pour le jeu de données globales et celles obtenues par variété.

```{python}
iris[iris['Class']=='setosa'].describe()
```

```{python}
iris[iris['Class']=='versicolor'].describe()
```
```{python}
iris[iris['Class']=='virginica'].describe()

```

## 3 - Visualisation des données

### 1 - Tracer la fonction de répartition empirique de la largeur des pétales pour les trois variétés du jeu de données iris, sur trois graphes différents.

```{python}
sns.ecdfplot(data=iris[iris.Class=="setosa"], x='Petal_Width')
```

```{python}
sns.ecdfplot(data=iris[iris.Class=="virginica"], x='Petal_Width')
```

```{python}
sns.ecdfplot(data=iris[iris.Class=="versicolor"], x='Petal_Width')
```

### 2 - Tracer la fonction de répartition empirique de la largeur des pétales pour les trois variétés du jeu de données iris, sur le même graphe, avec l'option hue.

```{python}
sns.ecdfplot(data=iris, x='Petal_Width', hue="Class")
```

### 3 - Pour le jeu de données iris, tracez l'histogramme des longueurs de pétales pour tout le jeu de données.
```{python}
pl = iris.Petal_Length

fig, ax=plt.subplots()
ax.hist(pl,edgecolor='k')
fig.suptitle('Histogramme des longueurs des pétales')
```

```{python}
fig, ax=plt.subplots()
sns.histplot(data=iris, x='Petal_Length')
fig.suptitle('Histogramme des longueurs des pétales')
```

### 4 - Jouer avec le nombre de classes avec l'option bins.
```{python}
fig, ax=plt.subplots()
ax.hist(pl,bins=20,edgecolor='k')
fig.suptitle('Histogramme des longueurs des pétales')
```

```{python}
fig, ax=plt.subplots()
sns.histplot(data=iris, x='Petal_Length', bins=20)
fig.suptitle('Histogramme des longueurs des pétales')
```

### 5 - Pour le jeu de données iris, tracez l'histogramme des longueurs de pétales pour tout le jeu de données en colorant les barres en fonction de l'espèce (option sns hue).

```{python}
fig, ax=plt.subplots()
sns.histplot(data=iris, x='Petal_Length', hue='Class')
fig.suptitle('Histogramme des longueurs des pétales')
```

### 6 - Pour le jeu de données iris, tracer les boîtes à moustache des longueurs de pétales pour chacune des trois variétés.
```{python}
pl1 = pl[iris.Class=='setosa']
pl2 = pl[iris.Class=='versicolor']
pl3 = pl[iris.Class=='virginica']
```

```{python}
fig, ax=plt.subplots()
ax.boxplot([pl1,pl2,pl3])
fig.suptitle('Boxplot des longueurs des pétales')
plt.xticks([1, 2, 3], ["setosa", "versicolor", "virginica"])
```

```{python}
fig, ax=plt.subplots()
sns.boxplot(data=iris, x= 'Class', y='Petal_Length')
fig.suptitle('Boxplot des longueurs des pétales')
```
